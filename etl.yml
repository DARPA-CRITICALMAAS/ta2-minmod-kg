version: 1

services:
  - name: predefined entities
    classpath: statickg.services.drepr.DReprService
    args:
      path:
        - ::CFG_DIR::extractors/category.yml
        - ::CFG_DIR::extractors/commodity.yml
        - ::CFG_DIR::extractors/deposit_type.yml
        - ::CFG_DIR::extractors/unit.yml
        - ::CFG_DIR::extractors/country.yml
        - ::CFG_DIR::extractors/state_or_province.yml
        - ::CFG_DIR::extractors/source_score.yml
        - ::CFG_DIR::extractors/epsg.yml
        - ::CFG_DIR::extractors/material_form.yml
      format: turtle
  - name: same as
    classpath: statickg.services.drepr.DReprService
    args:
      path: ::CFG_DIR::extractors/same_as.yml
      format: turtle
  - name: mineral site
    classpath: statickg.services.drepr.DReprService
    args:
      path: ::CFG_DIR::extractors/mineral_site.yml
      format: turtle
      parallel: true
  - name: mineral system
    classpath: statickg.services.drepr.DReprService
    ext: ttl
    args:
      path: ::CFG_DIR::extractors/mineral_system.yml
      format: turtle
  - name: copy
    classpath: statickg.services.copy.CopyService
  - name: version
    classpath: statickg.services.version.VersionService
  - name: concat
    classpath: statickg.services.concat.ConcatTTLService
  - name: load to fuseki
    classpath: statickg.services.fuseki.FusekiDataLoaderService
    args:
      batch_size: 102400
      capture_output: true
  - name: deploy fuseki
    classpath: minmodkg.fuseki_deployment.FusekiDeploymentService
  - name: validate filename
    classpath: minmodkg.validators.FilenameValidatorService
    args:
      pattern: ^[a-zA-Z0-9_\-,.]+$
  - name: split mineral site
    classpath: statickg.services.split.HashSplitService
    args:
      parallel: true
  - name: filter mineral site
    classpath: statickg.services.filter.HashFilterService
    args:
      parallel: true
pipeline:
  - service: validate filename
    args:
      input:
        - ::REPO::data/entities/*.csv
        - ::REPO::data/mineral-sites/*/*/*.json
        - ::REPO::data/same-as/umn/*.csv
        - ::REPO::data/mappable-criteria/sri/*.json
        - ::REPO::data/curated-mineral-sites/*/*/*.json
  - service: predefined entities
    args:
      input: ::REPO::data/entities/*.csv
      output: ::DATA_DIR::predefined-entities/
  - service: split mineral site
    args:
      input: ::REPO::data/mineral-sites/*/*/*.json
      output:
        base: ::DATA_DIR::mineral-sites/split/
        format: "{fileparent}/{bucketno:05d}/{filegrandparent}_{filename}"
      key_prop: ["source_id", "record_id"]
      num_buckets: 512
  - service: split mineral site
    args:
      input: ::REPO::data/curated-mineral-sites/*/*/*.json
      output:
        base: ::DATA_DIR::mineral-sites/curated/
        format: "{fileparent}/{bucketno:05d}/{filegrandparent}_{filename}"
      key_prop: ["source_id", "record_id"]
      num_buckets: 512
  - service: filter mineral site
    args:
      key_prop: ["source_id", "record_id"]
      all_output: ::DATA_DIR::mineral-sites/split/
      filter_output: ::DATA_DIR::mineral-sites/curated/
      output: ::DATA_DIR::mineral-sites/non-curated/
  - service: mineral site
    args:
      - input: ::DATA_DIR::mineral-sites/non-curated/*/*/*.json
        output:
          base: ::DATA_DIR::mineral-sites/mapped-non-curated/
          format: "{filegrandparent}/{fileparent}_{filestem}.{fileext}"
      - input: ::DATA_DIR::mineral-sites/curated/*/*/*.json
        output:
          base: ::DATA_DIR::mineral-sites/mapped-curated/
          format: "{filegrandparent}/{fileparent}_{filestem}.{fileext}"
  - service: same as
    args:
      input: ::REPO::data/same-as/umn/*.csv
      output: ::DATA_DIR::same-as/
  - service: mineral system
    args:
      input: ::REPO::data/mappable-criteria/sri/*.json
      output: ::DATA_DIR::mappable-criteria/
  - service: copy
    args:
      input: ::CFG_DIR::schema/ontology.ttl
      output: "::DATA_DIR::"
  - service: version
    args:
      entity: https://minmod.isi.edu/resource/kg
      entity_type: https://minmod.isi.edu/ontology/KnowledgeGraph
      output: ::DATA_DIR::version.ttl
  - service: load to fuseki
    args:
      input:
        - ::DATA_DIR::ontology.ttl
        - ::DATA_DIR::predefined-entities/*.ttl
        - ::DATA_DIR::same-as/*.ttl
        - ::DATA_DIR::mineral-sites/mapped-non-curated/*/*.ttl
        - ::DATA_DIR::mineral-sites/mapped-curated/*/*.ttl
        - ::DATA_DIR::mappable-criteria/*.ttl
      replaceable_input: ::DATA_DIR::version.ttl
      endpoint:
        update: /minmod/update
        gsp: /minmod/data
        start: >-
          docker run --name {ID}
          -d -p {PORT}:3030
          -v {DB_DIR}:/databases
          -v ::DATA_DIR::{}:/data
          --network=minmod
          --network-alias=kg
          minmod-fuseki fuseki/fuseki-server --config=fuseki/config.ttl
        stop: docker stop {ID} && docker rm {ID}
        find_by_id: docker ps --format '{{{{index (split .Ports "-") 0}}}}' --filter name={ID}
      load:
        command: >-
          docker run --rm -w /data
          -v {DB_DIR}:/databases
          -v ::DATA_DIR::{}:/data
          minmod-fuseki mytdbloader --loc /databases {FILES}
        basedir: "::DATA_DIR::"
        dbdir: "::DB_DIR::"
  - service: deploy fuseki
    args:
      start: >-
        docker run --name {ID}
        -d -p {PORT}:3030
        -v {DB_DIR}:/databases
        -v ::DATA_DIR::{}:/data
        --network=minmod
        --network-alias=kg
        minmod-fuseki fuseki-server --config=/home/criticalmaas/fuseki/config.ttl
      stop_all: docker container rm -f $(docker container ls -aq --filter ancestor=minmod-fuseki)
