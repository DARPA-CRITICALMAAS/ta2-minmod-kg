version: 1

services:
  - name: predefined entities
    classpath: statickg.services.drepr.DReprService
    args:
      path:
        - ::CFG_DIR::extractors/category.yml
        - ::CFG_DIR::extractors/commodity.yml
        - ::CFG_DIR::extractors/deposit_type.yml
        - ::CFG_DIR::extractors/unit.yml
        - ::CFG_DIR::extractors/country.yml
        - ::CFG_DIR::extractors/state_or_province.yml
        - ::CFG_DIR::extractors/source_score.yml
        - ::CFG_DIR::extractors/epsg.yml
        - ::CFG_DIR::extractors/material_form.yml
      format: turtle
  - name: same as
    classpath: minmodkg.etl.same_as.SameAsService
  - name: mineral site
    classpath: statickg.services.drepr.DReprService
    args:
      path: ::CFG_DIR::extractors/mineral_site.yml
      format: turtle
      parallel: true
  - name: dedup mineral site
    classpath: minmodkg.etl.dedup_site.DedupSiteService
    args:
      parallel: true
  - name: mineral system
    classpath: statickg.services.drepr.DReprService
    ext: ttl
    args:
      path: ::CFG_DIR::extractors/mineral_system.yml
      format: turtle
  - name: copy
    classpath: statickg.services.copy.CopyService
  - name: version
    classpath: statickg.services.version.VersionService
  - name: concat
    classpath: statickg.services.concat.ConcatTTLService
  - name: load to fuseki
    classpath: statickg.services.fuseki.FusekiDataLoaderService
    args:
      batch_size: 102400
      capture_output: true
  - name: deploy fuseki
    classpath: minmodkg.etl.fuseki_deployment.FusekiDeploymentService
  - name: validate filename
    classpath: minmodkg.validators.FilenameValidatorService
    args:
      pattern: ^[a-zA-Z0-9_\-,.]+$
pipeline:
  - service: validate filename
    args:
      input:
        - ::REPO::data/entities/*.csv
        - ::REPO::data/mineral-sites/*/*/*.json
        - ::REPO::data/same-as/umn/*.csv
        - ::REPO::data/mappable-criteria/sri/*.json
        - ::REPO::data/curated-mineral-sites/*/*/*.json
  - service: predefined entities
    args:
      input: ::REPO::data/entities/*.csv
      output: ::DATA_DIR::predefined-entities/
  - service: mineral site
    args:
      - input: ::REPO::data/mineral-sites/*/*/*.json
        output:
          base: ::DATA_DIR::mineral-sites
          format: "{filegrandparent}/{fileparent}_{filestem}.{fileext}"
  - service: same as
    args:
      input: ::REPO::data/same-as/umn/*.csv
      curated_input: ::REPO::data/curated-same-as/*/*.json
      output:
        base: ::DATA_DIR::same-as/
        format: "{fileparent}_{filestem}.json"
  # - service: dedup mineral site
  #   args:
  #     predefined_entities: ::DATA_DIR::predefined-entities/
  #     same_as_group: ::DATA_DIR::same-as/final/groups.json
  #     input: ::REPO::data/mineral-sites/*/*/*.json
  #     output:
  #       base: ::DATA_DIR::dedup-mineral-sites/
  #       format: "{filegrandparent}/{fileparent}_{filestem}.json"
  # - service: copy
  #   args:
  #     input: ::CFG_DIR::schema/ontology.ttl
  #     output: "::DATA_DIR::"
  # - service: version
  #   args:
  #     entity: https://minmod.isi.edu/resource/kg
  #     entity_type: https://minmod.isi.edu/ontology/KnowledgeGraph
  #     output: ::DATA_DIR::version.ttl
  # - service: load to fuseki
  #   args:
  #     input:
  #       - ::DATA_DIR::ontology.ttl
  #       - ::DATA_DIR::predefined-entities/*.ttl
  #       - ::DATA_DIR::mineral-sites/*/*.ttl
  #       - ::DATA_DIR::same-as/final/*.ttl
  #       - ::DATA_DIR::dedup-mineral-sites/final/*.ttl
  #     replaceable_input: ::DATA_DIR::version.ttl
  #     endpoint:
  #       update: /minmod/update
  #       gsp: /minmod/data
  #       start: >-
  #         docker run --name {ID}
  #         -d -p {PORT}:3030
  #         -v {DB_DIR}:/home/criticalmaas/databases
  #         -v ::DATA_DIR::{}:/data
  #         --network=minmod
  #         --network-alias=kg
  #         minmod-fuseki fuseki/fuseki-server --config=fuseki/config.ttl
  #       stop: docker stop {ID} && docker rm {ID}
  #       find_by_id: docker ps --format '{{{{index (split .Ports "-") 0}}}}' --filter name={ID}
  #     load:
  #       command: >-
  #         docker run --rm -w /data
  #         -v {DB_DIR}:/home/criticalmaas/databases
  #         -v ::DATA_DIR::{}:/data
  #         minmod-fuseki mytdbloader --loc /home/criticalmaas/databases {FILES}
  #       basedir: "::DATA_DIR::"
  #       dbdir: "::DB_DIR::"
  # - service: deploy fuseki
  #   args:
  #     start: >-
  #       docker run --name {ID}
  #       -d -p {PORT}:3030
  #       -v {DB_DIR}:/home/criticalmaas/databases
  #       -v ::DATA_DIR::{}:/data
  #       --network=minmod
  #       --network-alias=kg
  #       minmod-fuseki fuseki-server --config=/home/criticalmaas/fuseki/config.ttl
  #     stop_all: docker container rm -f $(docker container ls -aq --filter ancestor=minmod-fuseki)
