version: 1

services:
  - name: predefined entities
    classpath: statickg.services.drepr.DReprService
    args:
      path:
        - ::CFG_DIR::extractors/category.yml
        - ::CFG_DIR::extractors/commodity.yml
        - ::CFG_DIR::extractors/deposit_type.yml
        - ::CFG_DIR::extractors/unit.yml
        - ::CFG_DIR::extractors/country.yml
        - ::CFG_DIR::extractors/state_or_province.yml
        - ::CFG_DIR::extractors/epsg.yml
        - ::CFG_DIR::extractors/material_form.yml
      format: turtle
  - name: same as
    classpath: statickg.services.drepr.DReprService
    args:
      path: ::CFG_DIR::extractors/same_as.yml
      format: turtle
  - name: mineral site
    classpath: statickg.services.drepr.DReprService
    args:
      path: ::CFG_DIR::extractors/mineral_site.yml
      format: turtle
  - name: mineral system
    classpath: statickg.services.drepr.DReprService
    ext: ttl
    args:
      path: ::CFG_DIR::extractors/mineral_system.yml
      format: turtle
  - name: copy
    classpath: statickg.services.copy.CopyService
  - name: version
    classpath: statickg.services.version.VersionService
  - name: concat
    classpath: statickg.services.concat.ConcatTTLService
  - name: load to fuseki
    classpath: statickg.services.fuseki.FusekiDataLoaderService
    args:
      batch_size: 128
      capture_output: true
  - name: deploy fuseki
    classpath: minmodkg.fuseki_deployment.FusekiDeploymentService
  - name: validate filename
    classpath: minmodkg.validators.FilenameValidatorService
    args:
      pattern: ^[a-zA-Z0-9_\-,]+$
pipeline:
  - service: validate filename
    args:
      input:
        - ::REPO::data/entities/*.csv
        - ::REPO::data/inferlink/extractions/*.json
        - ::REPO::data/umn/*.json
        - ::REPO::data/sri/*.json
        - ::REPO::data/umn/sameas/*.csv
        - ::REPO::data/sri/mappableCriteria/*.json
        - ::REPO::data/usc/*.ttl
  - service: predefined entities
    args:
      input: ::REPO::data/entities/*.csv
      output: ::DATA_DIR::predefined-entities/
  - service: mineral site
    args:
      - input: ::REPO::data/inferlink/extractions/*.json
        output: ::DATA_DIR::mineral-sites/inferlink/
      - input: ::REPO::data/umn/*.json
        output: ::DATA_DIR::mineral-sites/umn/
      - input: ::REPO::data/sri/*.json
        output: ::DATA_DIR::mineral-sites/sri/
      - input: ::REPO::data/usc/*.json
        output: ::DATA_DIR::mineral-sites/usc/
  - service: same as
    args:
      input: ::REPO::data/umn/sameas/*.csv
      output: ::DATA_DIR::same-as/
  - service: mineral system
    args:
      input: ::REPO::data/sri/mappableCriteria/*.json
      output: ::DATA_DIR::mappable-criteria/
  - service: copy
    args:
      input: ::REPO::data/usc/*.ttl
      output: ::DATA_DIR::usc/
  - service: version
    args:
      entity: https://minmod.isi.edu/resource/kg
      entity_type: https://minmod.isi.edu/ontology/KnowledgeGraph
      output: ::DATA_DIR::version.ttl
  # # test incremental loading
  # - service: load to fuseki
  #   args:
  #     input: ::DATA_DIR::*/**/*.ttl
  #     replaceable_input: ::DATA_DIR::version.ttl
  #     endpoint:
  #       update: /minmod/update
  #       gsp: /minmod/data
  #       start: >-
  #         echo 'start {ID}'
  #       stop: echo 'stop {ID}'
  #       find_by_id: echo ''
  #     load:
  #       command: >-
  #         echo 'load {FILES}'
  #       basedir: "::DATA_DIR::"
  #       dbdir: "::DB_DIR::"
  - service: load to fuseki
    args:
      input: ::DATA_DIR::*/**/*.ttl
      replaceable_input: ::DATA_DIR::version.ttl
      endpoint:
        update: /minmod/update
        gsp: /minmod/data
        start: >-
          docker run --name {ID}
          -d -p {PORT}:3030
          -v {DB_DIR}:/databases
          -v ::DATA_DIR::{}:/data
          minmod-fuseki fuseki/fuseki-server --config=fuseki/config.ttl
        stop: docker stop {ID} && docker rm {ID}
        find_by_id: docker ps --format '{{{{index (split .Ports "-") 0}}}}' --filter name={ID}
      load:
        command: >-
          docker run --rm -w /data
          -v {DB_DIR}:/databases
          -v ::DATA_DIR::{}:/data
          minmod-fuseki tdb2.tdbloader --loc /databases {FILES}
        basedir: "::DATA_DIR::"
        dbdir: "::DB_DIR::"
  - service: deploy fuseki
    args:
      start: >-
        docker run --name {ID}
        -d -p {PORT}:3030
        -v {DB_DIR}:/databases
        -v ::DATA_DIR::{}:/data
        minmod-fuseki fuseki-server --config=/home/criticalmaas/fuseki/config.ttl
      stop_all: docker container rm -f $(docker container ls -aq --filter ancestor=minmod-fuseki)
