version: "2"
resources: json
preprocessing:
  - type: pmap
    path: [ "MineralSite", .. ]
    code: |
      value = value.copy()
      print('&&&&&&&&&&')
      if 'deposit_type_candidate' not in value:
        value['deposit_type_candidate'] = [{}]
      if len(value['deposit_type_candidate']) == 0:
        value['deposit_type_candidate'] = [{}]
      if 'name' not in value:
        value['name'] = -1
      if 'source_id' not in value:
        value['source_id'] = -1
      if 'record_id' not in value:
        value['record_id'] = -1
      if 'id' not in value:
        value['id'] = -1
      if 'MineralInventory' not in value:
        value['MineralInventory'] = [{}]
      if 'geology_info' not in value:
        value['geology_info'] = {}
      else:
        geo = value['geology_info']
        print('ggggggggggg')
        if 'age' not in geo:
          geo['age'] = -1
        if 'process' not in geo:
          geo['process'] = -1
        if 'lithology' not in geo:
          geo['lithology'] = -1
        if 'comments' not in geo:
          geo['comments'] = -1
        if 'description' not in geo:
          geo['description'] = -1
        if 'environment' not in geo:
          geo['environment'] = -1
        if 'unit_name' not in geo:
          geo['unit_name'] = -1
      if 'location_info' not in value:
        value['location_info'] = {}
      else:
        ll = value['location_info']
        print('llllllll')
        if 'location' not in ll:
          ll['location'] = -1
        if 'country' not in ll:
          ll['country'] = -1
        if 'state_or_province' not in ll:
          ll['state_or_province'] = -1
        if 'crs' not in ll:
          ll['crs'] = -1
        if 'location_source_record_id' not in ll:
          ll['location_source_record_id'] = -1
        if 'location_source' not in ll:
          ll['location_source'] = -1
      
      print(value)
      return value
  - type: pmap
    path: [ "MineralSite", .. , "geology_info" ]
    code: |
      value = value.copy()
      print('ggggggggggg')
      if 'age' not in value:
        value['age'] = -1
      if 'process' not in value:
        value['process'] = -1
      if 'lithology' not in value:
        value['lithology'] = -1
      if 'comments' not in value:
        value['comments'] = -1
      if 'description' not in value:
        value['description'] = -1
      if 'environment' not in value:
        value['environment'] = -1
      if 'unit_name' not in value:
        value['unit_name'] = -1
      print(value)
      return value
  - type: pmap
    path: [ "MineralSite", .. , "location_info" ]
    code: |
      value = value.copy()
      print('%%%%%%%%%%')
      if 'location' not in value:
        value['location'] = -1
      if 'country' not in value:
        value['country'] = -1
      if 'state_or_province' not in value:
        value['state_or_province'] = -1
      if 'crs' not in value:
        value['crs'] = -1
      if 'location_source_record_id' not in value:
        value['location_source_record_id'] = -1
      if 'location_source' not in value:
        value['location_source'] = -1
      return value
  - type: pmap
    path: ["MineralSite", .., "MineralInventory"]
    code: |
      value = value.copy()
      print('^^^^^^^^^^^^^')
      print(value)
      print(len(value))
      if len(value) > 0:
        print('Len is not 0 .......')
        for v in value:
          if 'category' not in v:
            v['category'] = []
          if len(v['category']) == 0:
            v['category'] = ["http://minmod.isi.edu/resource/MISSING"]
          if 'id' not in v:
            v['id'] = -1
          if 'commodity' not in v:
            v['commodity'] = -1
          if 'date' not in v:
            v['date'] = -1
          if 'zone' not in v:
            v['zone'] = -1
          if 'ore' not in v:
            v['ore'] = {'ore_unit': -1, 'ore_value': -1}
          if 'reference' not in v:
            v['reference'] = {}
          if 'grade' not in v:
            v['grade'] = {'grade_unit': -1, 'grade_value': -1}
          if 'cutoff_grade' not in v:
            v['cutoff_grade'] = {'grade_unit': -1, 'grade_value': -1}
          if 'contained_metal' not in v:
            v['contained_metal'] = -1
        print(value)
        return value
      value = [{}]
      print(value)
      return value
  - type: pmap
    path: [ "MineralSite", .. , "MineralInventory", ..  ]
    code: |
      value = value.copy()
      print('--------')
      print(value)
      if 'zone' not in value:
        value['zone'] = -1
      if 'category' not in value:
        value['category'] = []
      if len(value['category']) == 0:
        value['category'] = ["http://minmod.isi.edu/resource/MISSING"]
      if 'commodity' not in value:
        value['commodity'] = -1
      if 'reference' not in value:
        value['reference'] = {}
      if 'contained_metal' not in value:
        value['contained_metal'] = -1
      if 'id' not in value:
        value['id'] = -1
      if 'ore' not in value:
        value['ore'] = {'ore_unit': -1, 'ore_value': -1}
      if 'grade' not in value:
        value['grade'] = {'grade_unit': -1, 'grade_value': -1}
      if 'cutoff_grade' not in value:
        value['cutoff_grade'] = {'grade_unit': -1, 'grade_value': -1}
      if 'date' not in value:
        value['date'] = -1
      print(value)
      return value
  - type: pmap
    path: [ "MineralSite", .., "deposit_type_candidate" ]
    code: |
      value = value.copy()
      if len(value) > 0:
        for v in value:
          if 'normalized_uri' not in v:
            v['normalized_uri'] = -1
          if 'source' not in v:
            v['source'] = -1
          if 'confidence' not in v:
            v['confidence'] = -1
          if 'observed_name' not in v:
            v['observed_name'] = -1
          if 'id' not in v:
            v['id'] = -1
        return value
      value = [{}]
      return value
  - type: pmap
    path: [ "MineralSite", .. , "deposit_type_candidate", .. ]
    code: |
      v = value.copy()
      if 'normalized_uri' not in v:
        v['normalized_uri'] = -1
      if 'source' not in v:
        v['source'] = -1
      if 'confidence' not in v or v['confidence'] == 'NaN':
        v['confidence'] = -1
      if 'observed_name' not in v:
        v['observed_name'] = -1
      if 'id' not in v:
        v['id'] = -1
      return v
  - type: pmap
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference" ]
    change_structure: false
    code: |
      print('^^^^^')
      value = value.copy()
      if 'id' not in value:
        value['id'] = -1
      if 'document' not in value:
        value['document'] = {}
      if 'page_info' not in value:
        value['page_info'] = {}
      print(value)
      return value
  - type: pmap
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "document" ]
    change_structure: false
    code: |
      print('------^^^^^-------')
      print(value)
      if value == -1:
        return value
      value = value.copy()
      if 'id' not in value:
        value['id'] = -1
      if 'doi' not in value:
        value['doi'] = -1
      if 'issue' not in value:
        value['issue'] = -1
      if 'year' not in value:
        value['year'] = -1
      if 'uri' not in value:
        value['uri'] = -1
      if 'journal' not in value:
        value['journal'] = -1
      if 'description' not in value:
        value['description'] = -1
      if 'title' not in value:
        value['title'] = -1
      if 'volume' not in value:
        value['volume'] = -1
      if 'month' not in value:
        value['month'] = -1
      if 'authors' not in value:
        value['authors'] = -1
      return value
  - type: pmap
    path: [ "MineralSite", .., "MineralInventory", .., "reference", "document", "authors", ]
    change_structure: false
    code: |
      print('------aaaaaaaaaa-------')
      print(value)
      print(type(value))
      if value == -1:
        return value
      value = value.copy()
      if len(value) == 0:
        value = ''
      else:
        value = ",".join(value)
      
      print(value)
      
      return value
  - type: pmap
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "page_info" ]
    change_structure: false
    code: |
      if value == -1:
        return value
      print('------yyyyyyyy-------')
      print(value)
      value = value.copy()
      if len(value) > 0:
        for v in value:
          if 'page' not in v:
            v['page'] = -1
          if 'bounding_box' not in v:
            v['bounding_box'] = {}
          else:
            bb = v['bounding_box']
            if 'x_min' not in bb:
              bb['x_min'] = -1
            elif bb['x_min'] == '':
              bb['x_min'] = -1
            if 'x_max' not in bb:
              bb['x_max'] = -1
            elif bb['x_max'] == '':
              bb['x_max'] = -1
            if 'y_min' not in bb:
              bb['y_min'] = -1
            elif bb['y_min'] == '':
              bb['y_min'] = -1
            if 'y_max' not in bb:
              bb['y_max'] = -1 
            elif bb['y_max'] == '':
              bb['y_max'] = -1

        return value
      value = [{"bounding_box": {}, "page": -1}]
      return value
  - type: pmap
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "page_info", .., "bounding_box"]
    change_structure: false
    code: |
      print('(((((((((((((')
      print(value)
      value = value.copy()
      if 'x_min' not in value:
        value['x_min'] = -1
      elif value['x_min'] == '':
          value['x_min'] = -1
      if 'x_max' not in value:
        value['x_max'] = -1
      elif value['x_max'] == '':
          value['x_max'] = -1
      if 'y_min' not in value:
        value['y_min'] = -1
      elif value['y_min'] == '':
          value['y_min'] = -1
      if 'y_max' not in value:
        value['y_max'] = -1
      elif value['y_max'] == '':
          value['y_max'] = -1
      print(value)
      return value


  - type: pmap
    path: [ "MineralSystem" ]
    code: |
      value = value.copy()
      print('&&&&&&&&&&sssssssss')
      if 'source' not in value:
        value['source'] = [{}]
      if len(value['source']) == 0:
        value['source'] = [{}]
      if 'pathway' not in value:
        value['pathway'] = [{}]
      if len(value['pathway']) == 0:
        value['pathway'] = [{}]
      if 'trap' not in value:
        value['trap'] = [{}]
      if len(value['trap']) == 0:
        value['trap'] = [{}]
      if 'preservation' not in value:
        value['preservation'] = [{}]
      if len(value['preservation']) == 0:
        value['preservation'] = [{}]
      
      
      print(value)
      return value
  - type: pmap
    path: [ "MineralSystem" , "source", .. ]
    code: |
      value = value.copy()
      print('ggggggggggg')
      if 'criteria' not in value:
        value['criteria'] = -1
      if 'theorectical' not in value:
        value['theorectical'] = -1
      if 'supporting_references' not in value:
        value['supporting_references'] = [{}]
      if len(value['supporting_references']) == 0:
        value['supporting_references'] = [{}]
      if 'potential_dataset' not in value:
        value['potential_dataset'] = [{}]
      print(value)
      return value
  - type: pmap
    path: [ "MineralSite", .. , "location_info" ]
    code: |
      value = value.copy()
      print('%%%%%%%%%%')
      if 'location' not in value:
        value['location'] = -1
      if 'country' not in value:
        value['country'] = -1
      if 'state_or_province' not in value:
        value['state_or_province'] = -1
      if 'crs' not in value:
        value['crs'] = -1
      if 'location_source_record_id' not in value:
        value['location_source_record_id'] = -1
      if 'location_source' not in value:
        value['location_source'] = -1
      return value
  - type: pmap
    path: ["MineralSite", .., "MineralInventory"]
    code: |
      value = value.copy()
      print('^^^^^^^^^^^^^')
      print(value)
      print(len(value))
      if len(value) > 0:
        print('Len is not 0 .......')
        for v in value:
          if 'category' not in v:
            v['category'] = []
          if len(v['category']) == 0:
            v['category'] = ["http://minmod.isi.edu/resource/MISSING"]
          if 'id' not in v:
            v['id'] = -1
          if 'commodity' not in v:
            v['commodity'] = -1
          if 'date' not in v:
            v['date'] = -1
          if 'zone' not in v:
            v['zone'] = -1
          if 'ore' not in v:
            v['ore'] = {'ore_unit': -1, 'ore_value': -1}
          if 'reference' not in v:
            v['reference'] = {}
          if 'grade' not in v:
            v['grade'] = {'grade_unit': -1, 'grade_value': -1}
          if 'cutoff_grade' not in v:
            v['cutoff_grade'] = {'grade_unit': -1, 'grade_value': -1}
          if 'contained_metal' not in v:
            v['contained_metal'] = -1
        print(value)
        return value
      value = [{}]
      print(value)
      return value
  - type: pmap
    path: [ "MineralSite", .. , "MineralInventory", ..  ]
    code: |
      value = value.copy()
      print('--------')
      print(value)
      if 'zone' not in value:
        value['zone'] = -1
      if 'category' not in value:
        value['category'] = []
      if len(value['category']) == 0:
        value['category'] = ["http://minmod.isi.edu/resource/MISSING"]
      if 'commodity' not in value:
        value['commodity'] = -1
      if 'reference' not in value:
        value['reference'] = {}
      if 'contained_metal' not in value:
        value['contained_metal'] = -1
      if 'id' not in value:
        value['id'] = -1
      if 'ore' not in value:
        value['ore'] = {'ore_unit': -1, 'ore_value': -1}
      if 'grade' not in value:
        value['grade'] = {'grade_unit': -1, 'grade_value': -1}
      if 'cutoff_grade' not in value:
        value['cutoff_grade'] = {'grade_unit': -1, 'grade_value': -1}
      if 'date' not in value:
        value['date'] = -1
      print(value)
      return value
  - type: pmap
    path: [ "MineralSite", .., "deposit_type_candidate" ]
    code: |
      value = value.copy()
      if len(value) > 0:
        for v in value:
          if 'normalized_uri' not in v:
            v['normalized_uri'] = -1
          if 'source' not in v:
            v['source'] = -1
          if 'confidence' not in v:
            v['confidence'] = -1
          if 'observed_name' not in v:
            v['observed_name'] = -1
          if 'id' not in v:
            v['id'] = -1
        return value
      value = [{}]
      return value
  - type: pmap
    path: [ "MineralSite", .. , "deposit_type_candidate", .. ]
    code: |
      v = value.copy()
      if 'normalized_uri' not in v:
        v['normalized_uri'] = -1
      if 'source' not in v:
        v['source'] = -1
      if 'confidence' not in v or v['confidence'] == 'NaN':
        v['confidence'] = -1
      if 'observed_name' not in v:
        v['observed_name'] = -1
      if 'id' not in v:
        v['id'] = -1
      return v
  - type: pmap
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference" ]
    change_structure: false
    code: |
      print('^^^^^')
      value = value.copy()
      if 'id' not in value:
        value['id'] = -1
      if 'document' not in value:
        value['document'] = {}
      if 'page_info' not in value:
        value['page_info'] = {}
      print(value)
      return value
  - type: pmap
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "document" ]
    change_structure: false
    code: |
      print('------^^^^^-------')
      print(value)
      if value == -1:
        return value
      value = value.copy()
      if 'id' not in value:
        value['id'] = -1
      if 'doi' not in value:
        value['doi'] = -1
      if 'issue' not in value:
        value['issue'] = -1
      if 'year' not in value:
        value['year'] = -1
      if 'uri' not in value:
        value['uri'] = -1
      if 'journal' not in value:
        value['journal'] = -1
      if 'description' not in value:
        value['description'] = -1
      if 'title' not in value:
        value['title'] = -1
      if 'volume' not in value:
        value['volume'] = -1
      if 'month' not in value:
        value['month'] = -1
      if 'authors' not in value:
        value['authors'] = -1
      return value
  - type: pmap
    path: [ "MineralSite", .., "MineralInventory", .., "reference", "document", "authors", ]
    change_structure: false
    code: |
      print('------aaaaaaaaaa-------')
      print(value)
      print(type(value))
      if value == -1:
        return value
      value = value.copy()
      if len(value) == 0:
        value = ''
      else:
        value = ",".join(value)
      
      print(value)
      
      return value
  - type: pmap
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "page_info" ]
    change_structure: false
    code: |
      if value == -1:
        return value
      print('------yyyyyyyy-------')
      print(value)
      value = value.copy()
      if len(value) > 0:
        for v in value:
          if 'page' not in v:
            v['page'] = -1
          if 'bounding_box' not in v:
            v['bounding_box'] = {}
          else:
            bb = v['bounding_box']
            if 'x_min' not in bb:
              bb['x_min'] = -1
            elif bb['x_min'] == '':
              bb['x_min'] = -1
            if 'x_max' not in bb:
              bb['x_max'] = -1
            elif bb['x_max'] == '':
              bb['x_max'] = -1
            if 'y_min' not in bb:
              bb['y_min'] = -1
            elif bb['y_min'] == '':
              bb['y_min'] = -1
            if 'y_max' not in bb:
              bb['y_max'] = -1 
            elif bb['y_max'] == '':
              bb['y_max'] = -1

        return value
      value = [{"bounding_box": {}, "page": -1}]
      return value
  - type: pmap
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "page_info", .., "bounding_box"]
    change_structure: false
    code: |
      print('(((((((((((((')
      print(value)
      value = value.copy()
      if 'x_min' not in value:
        value['x_min'] = -1
      elif value['x_min'] == '':
          value['x_min'] = -1
      if 'x_max' not in value:
        value['x_max'] = -1
      elif value['x_max'] == '':
          value['x_max'] = -1
      if 'y_min' not in value:
        value['y_min'] = -1
      elif value['y_min'] == '':
          value['y_min'] = -1
      if 'y_max' not in value:
        value['y_max'] = -1
      elif value['y_max'] == '':
          value['y_max'] = -1
      print(value)
      return value

attributes:
  id_mineral_site:
    path: [ "MineralSite", .. , "id" ]
    missing_values: [ -1 ]
  name_mineral_site:
    path: [ "MineralSite", .. , "name" ]
    missing_values: [ -1 ]
  source_mineral_site:
    path: [ "MineralSite", .. , "source_id" ]
    missing_values: [ -1 ]
  record_mineral_site:
    path: [ "MineralSite", .. , "record_id" ]
    missing_values: [ -1 ]
  mineral_inven:
    path: [ "MineralSite", .. , "MineralInventory" ]
    missing_values: [ -1 ]
  deposit_type_main:
    path: ["MineralSite", .., "deposit_type", ..]
    missing_values: [-1]
  geology_info:
    path: [ "MineralSite", .. , "geology_info"]
    missing_values: [ -1 ]
  location_info_location:
    path: ["MineralSite", .. , "location_info", "location"]
    missing_values: [ -1 ]
  location_info_country:
    path: ["MineralSite", .. , "location_info", "country"]
    missing_values: [ -1 ]
  location_info_state:
    path: [ "MineralSite", .. , "location_info", "state_or_province" ]
    missing_values: [ -1 ]
  location_info_location_source_record_id:
    path: ["MineralSite", .. , "location_info", "location_source_record_id"]
    missing_values: [ -1 ]
  location_info_location_source:
    path: ["MineralSite", .. , "location_info", "location_source"]
    missing_values: [ -1 ]
  location_info_crs:
    path: ["MineralSite", .. , "location_info", "crs"]
    missing_values: [ -1 ]
  geology_info_age:
    path: [ "MineralSite", .. , "geology_info", "age" ]
    missing_values: [ -1 ]
  geology_info_unit_name:
    path: [ "MineralSite", .. , "geology_info", "unit_name" ]
    missing_values: [ -1 ]
  geology_info_description:
    path: [ "MineralSite", .. , "geology_info", "description" ]
    missing_values: [ -1 ]
  geology_info_lithology:
    path: [ "MineralSite", .. , "geology_info", "lithology" ]
    missing_values: [ -1 ]
  geology_info_process:
    path: [ "MineralSite", .. , "geology_info", "process" ]
    missing_values: [ -1 ]
  geology_info_environment:
    path: [ "MineralSite", .. , "geology_info", "environment" ]
    missing_values: [ -1 ]
  geology_info_comments:
    path: [ "MineralSite", .. , "geology_info", "comments" ]
    missing_values: [ -1 ]
  commodity:
    path: ["MineralSite", .. ,"MineralInventory", .. , "commodity"]
    missing_values: [ -1 ]
  ore:
    path: [ "MineralSite", .. , "MineralInventory", .. , "ore"]
    missing_values: [ -1 ]
  ore_value:
    path: ["MineralSite", .. , "MineralInventory", .. , "ore", "ore_value"]
    missing_values: [ -1 ]
  grade_value:
    path: ["MineralSite", .. , "MineralInventory", .. , "grade", "grade_value"]
    missing_values: [ -1 ]
  cutoff_grade_value:
    path: ["MineralSite", .. , "MineralInventory", .. , "cutoff_grade", "grade_value"]
    missing_values: [ -1 ]
  cutoff_grade_unit:
    path: [ "MineralSite", .. , "MineralInventory", .. , "cutoff_grade", "grade_unit" ]
    missing_values: [ -1 ]
  ore_unit:
    path: [ "MineralSite", .. , "MineralInventory", .. , "ore", "ore_unit" ]
    missing_values: [ -1 ]
  grade_unit:
    path: [ "MineralSite", .. , "MineralInventory", .. , "grade", "grade_unit" ]
    missing_values: [ -1 ]
  id:
    path: ["MineralSite", .. , "MineralInventory", .. , "id"]
    missing_values: [ -1 ]
  category:
    path: ["MineralSite", .. , "MineralInventory", .. , "category", .. ]
    missing_values: [ -1 ]
  contained_metal:
    path: ["MineralSite", .. , "MineralInventory", .. , "contained_metal"]
    missing_values: [ -1 ]
  date:
    path: ["MineralSite", .. , "MineralInventory", .. , "date"]
    missing_values: [ -1 ]
  zone:
    path: [ "MineralSite", .. , "MineralInventory", .. , "zone" ]
    missing_values: [ -1 ]
  id_reference:
    path: ["MineralSite", .. , "MineralInventory", .. , "reference", "id"]
    missing_values: [ -1 ]
  issue_document:
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "document", "issue" ]
    missing_values: [ -1 ]
  id_document:
    path: ["MineralSite", .. , "MineralInventory", .. , "reference", "document", "id"]
    missing_values: [ -1 ]
  uri_document:
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "document", "uri" ]
    missing_values: [ -1 ]
  doi:
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "document", "doi" ]
    missing_values: [ -1 ]
  volume:
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "document", "volume" ]
    missing_values: [ -1 ]
  year_document:
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "document", "year" ]
    missing_values: [ -1 ]
  month_document:
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "document", "month" ]
    missing_values: [ -1 ]
  authors:
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "document", "authors" ]
    missing_values: [ -1 ]
  journal:
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "document", "journal" ]
    missing_values: [ -1 ]
  description_document:
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "document", "description" ]
    missing_values: [ -1 ]
  title_document:
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "document", "title" ]
    missing_values: [ -1 ]
  page_info_array:
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "page_info", .. ]
    missing_values: [ -1 ]
  page_info:
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "page_info"]
    missing_values: [ -1 ]
  bounding_box:
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "page_info", .. , "bounding_box" ]
    missing_values: [ -1 ]
  x_min:
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "page_info", .. , "bounding_box", "x_min" ]
    missing_values: [ -1 ]
  x_max:
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "page_info", .. , "bounding_box", "x_max" ]
    missing_values: [ -1 ]
  y_min:
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "page_info", .. , "bounding_box", "y_min" ]
    missing_values: [ -1 ]
  y_max:
    path: [ "MineralSite", .. , "MineralInventory", .. , "reference", "page_info", .. , "bounding_box", "y_max" ]
    missing_values: [ -1 ]
  page:
    path: ["MineralSite", .. , "MineralInventory", .. , "reference", "page_info", .., "page"]
    missing_values: [ -1 ]
  id_deposit_type_candidate:
    path: [ "MineralSite", .., "deposit_type_candidate", .., "id" ]
    missing_values: [ -1 ]
  deposit_type_name:
    path: [ "MineralSite", .., "deposit_type_candidate", .., "observed_name" ]
    missing_values: [ -1 ]
  deposit_type_source:
    path: [ "MineralSite", .., "deposit_type_candidate", .., "source" ]
    missing_values: [ -1 ]
  deposit_type_confidence:
    path: [ "MineralSite", .., "deposit_type_candidate", .., "confidence" ]
    missing_values: [ -1 ]
  deposit_type_normalized_uri:
    path: [ "MineralSite", .., "deposit_type_candidate", .., "normalized_uri" ]
    missing_values: [ -1 ]

alignments:
  - type: dimension
    source: id_mineral_site
    target: name_mineral_site
    aligned_dims:
      - { source: 1, target: 1 }
  - type: dimension
    source: id_mineral_site
    target: source_mineral_site
    aligned_dims:
      - { source: 1, target: 1 }
  - type: dimension
    source: id_mineral_site
    target: record_mineral_site
    aligned_dims:
      - { source: 1, target: 1 }
  - type: dimension
    source: id_mineral_site
    target: location_info_location
    aligned_dims:
      - { source: 1, target: 1 }
  - type: dimension
    source: id_mineral_site
    target: location_info_country
    aligned_dims:
      - { source: 1, target: 1 }
  - type: dimension
    source: id_mineral_site
    target: location_info_state
    aligned_dims:
      - { source: 1, target: 1 }
  - type: dimension
    source: id_mineral_site
    target: location_info_location_source_record_id
    aligned_dims:
      - { source: 1, target: 1 }
  - type: dimension
    source: id_mineral_site
    target: location_info_location_source
    aligned_dims:
      - { source: 1, target: 1 }
  - type: dimension
    source: id_mineral_site
    target: location_info_crs
    aligned_dims:
      - { source: 1, target: 1 }
  - type: dimension
    source: id_mineral_site
    target: geology_info_age
    aligned_dims:
      - { source: 1, target: 1 }
  - type: dimension
    source: id_mineral_site
    target: geology_info_unit_name
    aligned_dims:
      - { source: 1, target: 1 }
  - type: dimension
    source: id_mineral_site
    target: geology_info_process
    aligned_dims:
      - { source: 1, target: 1 }
  - type: dimension
    source: id_mineral_site
    target: geology_info_description
    aligned_dims:
      - { source: 1, target: 1 }
  - type: dimension
    source: id_mineral_site
    target: geology_info_comments
    aligned_dims:
      - { source: 1, target: 1 }
  - type: dimension
    source: id_mineral_site
    target: geology_info_lithology
    aligned_dims:
      - { source: 1, target: 1 }
  - type: dimension
    source: id_mineral_site
    target: geology_info_environment
    aligned_dims:
      - { source: 1, target: 1 }
  - type: dimension
    source: id_mineral_site
    target: id
    aligned_dims:
      - { source: 1, target: 1 }
  - type: dimension
    source: deposit_type_main
    target: id_mineral_site
    aligned_dims:
      - { source: 1, target: 1 }
  - type: dimension
    source: id_mineral_site
    target: deposit_type_name
    aligned_dims:
      - { source: 1, target: 1 }
  - type: dimension
    source: deposit_type_name
    target: id_deposit_type_candidate
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: deposit_type_name
    target: deposit_type_source
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: deposit_type_name
    target: deposit_type_normalized_uri
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: deposit_type_name
    target: deposit_type_confidence
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id
    target: commodity
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id
    target: category
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id
    target: contained_metal
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id
    target: ore
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id
    target: date
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id
    target: zone
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id
    target: ore_value
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id
    target: grade_value
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id
    target: cutoff_grade_value
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id
    target: cutoff_grade_unit
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id
    target: ore_unit
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id
    target: grade_unit
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id
    target: id_reference
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id_reference
    target: id_document
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id_reference
    target: page_info
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id_document
    target: doi
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }

  - type: dimension
    source: id_document
    target: page
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
      - { source: 6, target: 6 }
  - type: dimension
    source: id_document
    target: bounding_box
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
      - { source: 6, target: 6 }

  - type: dimension
    source: page
    target: x_min
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
      - { source: 6, target: 6 }
  - type: dimension
    source: page
    target: x_max
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
      - { source: 6, target: 6 }
  - type: dimension
    source: page
    target: y_min
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
      - { source: 6, target: 6 }
  - type: dimension
    source: page
    target: y_max
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
      - { source: 6, target: 6 }
  - type: dimension
    source: id_document
    target: title_document
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id_document
    target: uri_document
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id_document
    target: journal
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id_document
    target: authors
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id_document
    target: year_document
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id_document
    target: month_document
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id_document
    target: issue_document
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id_document
    target: volume
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }
  - type: dimension
    source: id_document
    target: description_document
    aligned_dims:
      - { source: 1, target: 1 }
      - { source: 3, target: 3 }

semantic_model:
  mndr:DepositTypeCandidate:1:
    properties:
      - [ drepr:uri, id_deposit_type_candidate ]
      - [ mndr:id, id_deposit_type_candidate ]
      - [ mndr:observed_name, deposit_type_name ]
      - [ mndr:source, deposit_type_source ]
      - - mndr:normalized_uri
        - deposit_type_normalized_uri
        - xsd:anyURI
      - [ mndr:confidence, deposit_type_confidence ]

  mndr:MineralSite:1:
    properties:
      - [ drepr:uri, id_mineral_site ]
      - [ mndr:id, id_mineral_site ]
      - [ mndr:name, name_mineral_site ]
      - [ mndr:source_id, source_mineral_site ]
      - [ mndr:record_id, record_mineral_site ]
    links:
      - - mndr:deposit_type_candidate
        - mndr:DepositTypeCandidate:1
      - - mndr:location_info
        - mndr:LocationInfo:1
      - - mndr:mineral_inventory
        - mndr:MineralInventory:1

  mndr:LocationInfo:1:
    properties:
      - [ mndr:country, location_info_country ]
      - [ mndr:location_source_record_id, location_info_location_source_record_id ]
      - [ mndr:location_source, location_info_location_source ]
      - [ mndr:crs, location_info_crs ]
      - [ mndr:state_or_province, location_info_state ]
      - - mndr:location
        - location_info_location
        - geo:wktLiteral
    links: [ ]

  mndr:GeologyInfo:1:
    properties:
      - [ mndr:unit_name, geology_info_unit_name ]
      - [ mndr:age, geology_info_age ]
      - [ mndr:lithology, geology_info_lithology ]
      - [ mndr:comments, geology_info_comments ]
      - [ mndr:description, geology_info_description ]
      - [ mndr:process, geology_info_process ]
    links: [ ]

  mndr:MineralInventory:1:
    properties:
      - [ drepr:uri, id ]
      - - mndr:id
        - id
      - - mndr:contained_metal
        - contained_metal
      - - mndr:date
        - date
        - xsd:date
      - - mndr:zone
        - zone
      - - mndr:commodity
        - commodity
        - xsd:anyURI
    links:
      - - mndr:ore
        - mndr:Ore:1
      - - mndr:grade
        - mndr:Grade:1
      - - mndr:cutoff_grade
        - mndr:Grade:2
      - - mndr:reference
        - mndr:Reference:1
      - [mndr:category, mndr:Category:1]

  mndr:Category:1:
    properties:
      - [drepr:uri, category]

  mndr:Reference:1:
    properties:
      - [mndr:date, id_reference]
    links:
      - - mndr:document
        - mndr:Document:1
      - - mndr:page_info
        - mndr:PageInfo:1

  mndr:PageInfo:1:
    properties:
      - [ mndr:page, page ]
    links:
      - [ mndr:bounding_box,  mndr:BoundingBox:1 ]

  mndr:BoundingBox:1:
    properties:
      - [ mndr:x_min, x_min ]
      - [ mndr:x_max, x_max ]
      - [ mndr:y_min, y_min ]
      - [ mndr:y_max, y_max ]
    links: [ ]

  mndr:Document:1:
    properties:
      - [ drepr:uri, id_document ]
      - - mndr:id
        - id_document
      - - mndr:uri
        - uri_document
      - - mndr:doi
        - doi
      - - mndr:journal
        - journal
      - - mndr:authors
        - authors
      - - mndr:description
        - description_document
      - - mndr:title
        - title_document
      - - mndr:volume
        - volume
      - - mndr:issue
        - issue_document
      - - mndr:month
        - month_document
      - - mndr:year
        - year_document
    inverse_static_properties: [ ]
    links: [ ]

  mndr:Ore:1:
    properties:
      - - mndr:ore_value
        - ore_value
      - - mndr:ore_unit
        - ore_unit
        - xsd:anyURI
    links: [ ]
  mndr:Grade:1:
    properties:
      - - mndr:grade_value
        - grade_value
      - - mndr:grade_unit
        - grade_unit
        - xsd:anyURI
    links: [ ]
  mndr:Grade:2:
    properties:
      - - mndr:grade_value
        - cutoff_grade_value
      - - mndr:grade_unit
        - cutoff_grade_unit
        - xsd:anyURI
    static_properties: [ ]
    inverse_static_properties: [ ]
    links: [ ]
  prefixes:
    mndr: https://minmod.isi.edu/resource/
    geokb: https://geokb.wikibase.cloud/entity/
    rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns#
    rdfs: http://www.w3.org/2000/01/rdf-schema#
    xsd: http://www.w3.org/2001/XMLSchema#
    owl: http://www.w3.org/2002/07/owl#
    drepr: https://purl.org/drepr/1.0/
    geo: http://www.opengis.net/ont/geosparql#
    gkbi: https://geokb.wikibase.cloud/entity/
    gkbp: https://geokb.wikibase.cloud/wiki/Property/
